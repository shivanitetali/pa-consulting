package practice;


/**
 * balancedBrackets("[()]")
 * Input: exp = "[()]"
 * Output: Balanced
 * 
 * Input: exp = "{()}"
 * Output: Balanced
 * 
 * Input: exp = "[]{}()"
 * Output: Balanced
 * 
 * Input: exp = "[)[)"
 * Output: Not Balanced
 * 
 * Input: exp = "()]()"
 * Output: Not Balanced
 * 
 * @author tet19171871
 *
 */
public class Brackets 
{
	public static String balancedBrackets(String str ) 
	{	
		
		String result = "Balanced"; //success message + the default value
		String fail = "Not Balanced"; //fail message + the default value
		
		int openSquare = 0;
		int closedSquare = 0;
		int openBrackets = 0;
		int closedBrackets = 0;
		int openCurley = 0;
		int closedCurley = 0;
		
		
		
		if(str.length() == 0 || str.length() % 2 == 1)
		{
			return result;
		}
		else
		{
			
		}
		
		for(int index = 0; index < str.length(); index++)
		if(str.charAt(index) == '[')
		{
				openSquare++;
		}
		
		
		//System.out.println(Balanced);
		return "Balanced" + Balanced;
		
	}

}

/**
 * String split into array of char
 * length of the array
 * checked every index
 * variable to count
 * counted how many open and close brackets
 * if they were equal
 * result balanced
 * 
 *  
 * String builder
 * used other methods to break up the code
 * 
 * 
 * connect index checks inner index 
 * loop through the remainder of string to find corresponding closing parenthesis
 */


